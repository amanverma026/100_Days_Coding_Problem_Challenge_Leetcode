//145.Binary Tree Postorder Traversal
//Link--> https://leetcode.com/problems/binary-tree-postorder-traversal/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> li =new ArrayList<>();
            if(root == null){
                return li ; 
            }
            li.addAll(postorderTraversal(root.left));  // Add elements from the left subtree
            li.addAll(postorderTraversal(root.right)); // Add elements from the right subtree
            li.add(root.val);
        
            return li;
    }
}